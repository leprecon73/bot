/*
Week2, Honors Assignmenit.
*/
#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>

// suits: clubs (♣), diamonds (♦), hearts (♥) and spades (♠)
typedef enum Suits {Clubs,Diamonds,Hearts,Spades,Tns}Suits; //Tns - total number of suits
// rank: 2-10, Jack, Queen, King, Ace.
typedef enum Ranks {Two,Three,Four,Five,Six, Seven,Eight,Nine,Ten,\
		    Jack,Queen,King,Ace,Tnr}Ranks; //Tnr - total number of ranks

#define DSIZE (Tns * Tnr) // Tns * Tnr = 4 * 13 = 52, Classic poker deck size 
	    
//Using a struct to define a card, by task
typedef struct Card {char *suit; char *rank;}Card;

char* get_suit_name(enum Suits);//Returns string of Suits
char* get_rank_name(enum Ranks);//Returns string of Ranks
void fill_deck(Card []);	//Fill array of structs with the cards
void shuffle_deck(Card []);	//Shuffle the deck

int main () {
	int i,j,k;
	Card dk[DSIZE];
	int comb[10] = {0}; //0 - Royal flush, 1 - Straight flush, ...etc

	fill_deck(dk); 

	shuffle_deck(dk);
		
	for(j = DSIZE-1, k = 0; j > DSIZE-8; j--, k++)
			printf("%s-%s\n", dk[j].suit, dk[j].rank);

	return 0;
}
void fill_deck(Card dk[])
{   
	int i, s, r; //s - for suits, r - for ranks, i - for array through
	i = 0;
	for(s = 0; s < Tns; s++){
		for(r = 0; r < Tnr; r++){
			dk[i].suit =  get_suit_name(s);
			dk[i++].rank = get_rank_name(r);
		}
	}
}
void shuffle_deck(Card dk[])
{
		struct timeval tv;	//Gives the number of seconds and 
					//microseconds since the Epoc
		gettimeofday(&tv, NULL);//Get time from a timezone
		int usec = tv.tv_usec;  //Microseconds from timeval struct
		srand48(usec);          //Function for initialization drand48()

		size_t i;
		//Randomly chose a 'j' element and switch it with 'i' element
		//walking through array
		for (i = DSIZE-1; i > 0; i--) {
			size_t j = (unsigned int)(drand48()*(i+1));
			Card t = dk[j];
			dk[j] = dk[i];
			dk[i] = t;
		}
}


char* get_suit_name(enum Suits suit)
{
	switch (suit){
	case Clubs: return "Clubs";break;
	case Diamonds: return "Diamonds";break;
	case Hearts: return "Hearts";break;
	case Spades: return "Spades";break;
	}
}
char* get_rank_name(enum Ranks rank)
{
	switch (rank){
	case Two: return "Two";break;
	case Three: return "Three";break;
	case Four: return "Four";break;
	case Five: return "Five";break;
	case Six: return "Six";break;
	case Seven: return "Seven";break;
	case Eight: return "Eight";break;
	case Nine: return "Nine";break;
	case Ten: return "Ten";break;
	case Jack: return "Jack";break;
	case Queen: return "Queen";break;
	case King: return "King";break;
	case Ace: return "Ace";break;
	}
}
	
